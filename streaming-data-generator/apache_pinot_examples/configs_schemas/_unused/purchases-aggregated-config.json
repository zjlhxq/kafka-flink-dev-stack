{
    "tableName": "purchasesAggregated",
    "tableType": "REALTIME",
    "segmentsConfig": {
        "timeColumnName": "minutesSinceEpoch",
        "timeType": "MINUTES",
        "schemaName": "purchasesAggregated",
        "replicasPerPartition": "1"
    },
    "tenants": {},
    "tableIndexConfig": {
        "loadMode": "MMAP",
        "streamConfigs": {
            "streamType": "kafka",
            "stream.kafka.consumer.type": "lowlevel",
            "stream.kafka.topic.name": "demo.purchases.enriched",
            "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
            "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
            "stream.kafka.broker.list": "kafka:29092",
            "realtime.segment.flush.threshold.time": "3600000",
            "realtime.segment.flush.threshold.rows": "50000",
            "stream.kafka.consumer.prop.auto.offset.reset": "smallest"
        }
    },
    "metadata": {},
    "ingestionConfig": {
        "transformConfigs": [
            {
                "columnName": "minutesSinceEpoch",
                "transformFunction": "toEpochMinutes(transaction_timestamp)"
            }
        ],
        "aggregationConfigs": [
            {
                "columnName": "transaction_count",
                "aggregationFunction": "COUNT(*)"
            },
            {
                "columnName": "total_quantity",
                "aggregationFunction": "SUM(quantity)"
            },
            {
                "columnName": "total_purchases",
                "aggregationFunction": "SUM(total_purchase)"
            }
        ]
    }
}